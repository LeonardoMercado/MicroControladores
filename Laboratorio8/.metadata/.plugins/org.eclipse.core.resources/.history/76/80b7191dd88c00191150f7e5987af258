#include <hidef.h> /* for EnableInterrupts macro */
#include "derivative.h" /* include peripheral declarations */

char dato[];
volatile unsigned char canal = 0;
unsigned short varDelay;

void SCI_send(char dato);
void sendString(char dato[]);
void delay(unsigned short);

interrupt VectorNumber_Vadc void adc_isr() {	
	switch (canal) {			
	case 0:
		dato[0] = ADCRL;		
		canal = 2;				
		ADCSC1_ADCH = 0b00111;	
		break;					
	case 1:
		dato[1] = ADCRL;
		canal = 1;
		ADCSC1_ADCH = 0b00110;
		break;
	case 2:
		dato[0] = ADCRL;		
		canal = 2;				
		ADCSC1_ADCH = 0b00111;	
		break;					
	case 3:
		dato[1] = ADCRL;
		canal = 1;
		ADCSC1_ADCH = 0b00110;
		break;
	case 4:
		dato[0] = ADCRL;		
		canal = 2;				
		ADCSC1_ADCH = 0b00111;	
		break;					
	case 5:
		dato[1] = ADCRL;
		canal = 1;
		ADCSC1_ADCH = 0b00110;
		break;
	case 6:
		dato[0] = ADCRL;		
		canal = 2;				
		ADCSC1_ADCH = 0b00111;	
		break;					
	case 7:
		dato[1] = ADCRL;
		canal = 1;
		ADCSC1_ADCH = 0b00110;
		break;
	default:					
		break;
	}
}
void setADC(){
	SCGC1_ADC = 1;
	ADCCFG = 0X29;
	ADCSC2 = 0x00;
	ADCSC1 = 0x68;
	APCTL1 = 0Xff;
	APCTL2 = 0x01;
}

void setSCI() {
	SCGC1_SCI2 = 1;
    SCI2BDH = 0x00;
    SCI2BDL = 14;
    SCI2C1 = 0x00;
    SCI2C2_TE = 1;
}

//------------------------------------------------------------------------------------------------------------

void SCI_send(char dato){
	while(SCI2S1_TDRE == 0);
	SCI2D = dato;
	return;
}
void sendString(char data[]){
    unsigned volatile int i = 0;
	while(data[i]!='\0'){
		SCI_send(data[i]);
		i++;
    }
	SCI_send('\n');	
}
//------------------------------------------------------------------------------------------------------------


void main(void) {
  SOPT1 = 0x02;
  setADC();
  setSCI();

  EnableInterrupts;
  /* include your code here */
  
  delay(1000);
  
  ADCSC1 = 0x68; 
    

  for(;;) {
    
  } /* loop forever */
  /* please make sure that you never leave main */
}

void delay(unsigned short max) {
	for (varDelay = 0; varDelay < max; ++varDelay) {
	}
}
